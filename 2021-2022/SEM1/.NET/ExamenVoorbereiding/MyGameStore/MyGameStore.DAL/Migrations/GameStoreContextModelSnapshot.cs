// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGameStore.DAL.Contexts;

namespace MyGameStore.DAL.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    partial class GameStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyGameStore.DAL.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EmailAdress");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[EmailAdress] IS NOT NULL");

                    b.HasIndex("StoreId");

                    b.ToTable("tblPeople", "Person");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Email = "jef.v.d.a@live.be",
                            FirstName = "Jef",
                            Gender = 0,
                            LastName = "van der Avoirt",
                            StoreId = -1
                        },
                        new
                        {
                            Id = -2,
                            Email = "baetenjens@gmail.com",
                            FirstName = "Jens",
                            Gender = 0,
                            LastName = "Baeten",
                            StoreId = -2
                        });
                });

            modelBuilder.Entity("MyGameStore.DAL.Model.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addition")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("City")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Place");

                    b.Property<bool>("IsFranchiseStore")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tblStores", "Store");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Addition = "",
                            City = "Kortrijk",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Kortrijk",
                            Number = "260",
                            Street = "Korte Steenstraat",
                            Zipcode = "8500"
                        },
                        new
                        {
                            Id = -2,
                            Addition = "",
                            City = "Ninove",
                            IsFranchiseStore = true,
                            Name = "MyGameStore Ninove",
                            Number = "95",
                            Street = "Centrumlaan",
                            Zipcode = "9400"
                        },
                        new
                        {
                            Id = -3,
                            Addition = "",
                            City = "Roeselare",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Roeselare",
                            Number = "97",
                            Street = "Ooststraat",
                            Zipcode = "8800"
                        },
                        new
                        {
                            Id = -4,
                            Addition = "",
                            City = "Zaventem",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Zaventem",
                            Number = "173",
                            Street = "Weiveldlaan",
                            Zipcode = "1930"
                        },
                        new
                        {
                            Id = -5,
                            Addition = "",
                            City = "Hasselt",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Hasselt",
                            Number = "254",
                            Street = "Demerstraat",
                            Zipcode = "3500"
                        },
                        new
                        {
                            Id = -6,
                            Addition = "",
                            City = "Gent",
                            IsFranchiseStore = true,
                            Name = "MyGameStore Gent",
                            Number = "128",
                            Street = "Veldstraat",
                            Zipcode = "9000"
                        },
                        new
                        {
                            Id = -7,
                            Addition = "",
                            City = "Knokke-Heist",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Knokke-Heist",
                            Number = "215",
                            Street = "Lippenslaan",
                            Zipcode = "8300"
                        },
                        new
                        {
                            Id = -8,
                            Addition = "",
                            City = "Maaseik",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Maaseik",
                            Number = "239",
                            Street = "Bosstraat",
                            Zipcode = "3680"
                        },
                        new
                        {
                            Id = -9,
                            Addition = "",
                            City = "Beringen",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Beringen",
                            Number = "85",
                            Street = "Koolmijnlaan",
                            Zipcode = "3580"
                        },
                        new
                        {
                            Id = -10,
                            Addition = "",
                            City = "Geraardsbergen",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Geraardsbergen",
                            Number = "149",
                            Street = "Winkelstraat",
                            Zipcode = "9500"
                        },
                        new
                        {
                            Id = -11,
                            Addition = "",
                            City = "Asse",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Asse",
                            Number = "260",
                            Street = "Stationsstraat",
                            Zipcode = "1730"
                        },
                        new
                        {
                            Id = -12,
                            Addition = "",
                            City = "Geel",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Geel",
                            Number = "59",
                            Street = "Nieuwstraat",
                            Zipcode = "2440"
                        },
                        new
                        {
                            Id = -13,
                            Addition = "",
                            City = "Antwerpen",
                            IsFranchiseStore = true,
                            Name = "MyGameStore Antwerpen",
                            Number = "76",
                            Street = "Meir",
                            Zipcode = "2000"
                        },
                        new
                        {
                            Id = -14,
                            Addition = "",
                            City = "Mol",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Mol",
                            Number = "179",
                            Street = "Statiestraat",
                            Zipcode = "2400"
                        },
                        new
                        {
                            Id = -15,
                            Addition = "",
                            City = "Sint-Gillis",
                            IsFranchiseStore = false,
                            Name = "MyGameStore Sint-Gillis",
                            Number = "286",
                            Street = "Fonsnylaan",
                            Zipcode = "1060"
                        });
                });

            modelBuilder.Entity("MyGameStore.DAL.Model.Person", b =>
                {
                    b.HasOne("MyGameStore.DAL.Model.Store", "Store")
                        .WithMany("People")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("MyGameStore.DAL.Model.Store", b =>
                {
                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
